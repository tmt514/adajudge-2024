.ui.inverted.text.container( v-if="user" )
  .ui.inverted.segments( v-for="hw of homeworks" )
    .ui.inverted.segment
      h2.ui.inverted.heading 
        .ui.inverted.ribbon.label( :class="[ {running: 'olive', ended: 'red', unpublished: 'black'}[hw.status] ]",
          style="top: -2px;" )
          | {{ hw.status | capitalize }}
        | {{ hw.name }}

    .ui.inverted.segment
      h3.ui.inverted.header Your statistic
      .ui.inverted.stackable.three.column.grid
        .column.center.aligned
          .ui.inverted.statistic
            .value {{ hw.userPoints | toFixed 0 }}
              small(style='font-size: 40%; margin-left: 4px;') / {{ hw.totalPoints }}
            .label Points
        .column.center.aligned
          .ui.inverted.statistic
            .value {{ hw.AC }}
              small(style='font-size: 40%; margin-left: 4px;') / {{ hw.problemNum }}
            .label Problems fully Accepted
        .column.center.aligned
          .ui.inverted.statistic
            .value 
              img.ui.inverted.inline.image( v-if="getRankImage(hw)", :src="getRankImage(hw)" )
              i.angle.double.down.icon( v-if="!hw.rank" style="font-size: 70%; color: #555555;" )
              b( :class="[ getRankClass(hw) ]") {{ getRankStr(hw) }}
              small(style='font-size: 30%; margin-left: 4px;') / {{ hw.totUsers }}
            .label Rank

    .ui.inverted.segment
      h3.ui.inverted.header Information
      table.ui.inverted.definition.table
        tbody
          tr
            td.collapsing Due Date
            td {{ hw.due | toFormattedTime 'YYYY/MM/DD HH:mm:ss' }}
          tr( v-if="_.has(hw, 'meta.pdfLink')" )
            td.collapsing PDF link
            td 
              a(href="{{hw.meta.pdfLink}}") {{ hw.meta.pdfLink }}
    .ui.inverted.segment
      h3.ui.inverted.header Description
      div( v-html="hw.desc | marked" )
      
    .ui.inverted.segment
      h3.ui.inverted.header Programming Problems
      table.ui.inverted.celled.table.selectable.pointer
        thead
          tr
            th ID
            th Problem Name
            th.collapsing Weight
            th Your points
        tbody
          tr( v-for="problem of hw.problems" v-link="{name: 'problem', params: {id: problem.problem._id}}",
          :class="{ positive: problem.AC }")
            td {{ problem.problem._id }}
            td {{ problem.problem.name }}
            td {{ problem.weight }}
            td {{ problem.userPoints }}
              small {{ ' Ã—' + problem.weight }} = {{ problem.weight * problem.userPoints }}

    .ui.inverted.segment( v-if="user" )
      a.ui.inverted.button.right.labeled.icon.green.button.spaced( v-if="user.isAdmin || user.isTA || hw.showStatistic"
        v-link="{name: 'homework.statistic', params: {id: hw._id}}" )
        | Statistic
        i.area.chart.icon
      a.ui.inverted.button.right.labeled.icon.red.button.spaced( v-if="user.isAdmin || user.isTA || hw.showScoreboard"
        v-link="{name: 'homework.scoreboard', params: {id: hw._id}}" )
        | Scoreboard
        i.list.icon
      a.ui.inverted.button.right.labeled.icon.orange.button( v-if="user.isAdmin"
        v-link="{name: 'admin.homework', params: {id: hw._id}}" )
        | Admin Page
        i.doctor.icon

  .ui.inverted.fluid.right.labeled.icon.green.button( v-if="user && user.isAdmin" @click="newHomework" )
    | Add New Homework
    i.add.icon

component( v-else )
  .ui.inverted.masthead.center.aligned.segment
    .ui.inverted.text.container#main-header-out
      h1.ui.inverted.olive.header#main-header.menu-font
        p
          i.terminal.icon
          | &nbsp;ADA JUDGE
          br
          | 2024
      h2.ui.inverted.olive.header.menu-font Login to begin...

component( v-if="user && !user.isAdmin && homeworks.length==0" )
  .ui.inverted.masthead.center.aligned.segment
    .ui.inverted.text.container#main-header-out
      h1.ui.inverted.olive.header#main-header.menu-font
        p
          i.terminal.icon
          | &nbsp;ADA JUDGE
          br
          | 2024
      h2.ui.inverted.olive.header.menu-font No homework here...
